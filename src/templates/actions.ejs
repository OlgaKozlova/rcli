<% var fields = fields || [] -%>
<% var buttons = buttons || [] -%>
import {
<% fields.forEach(function(field){ -%>
<% const transformedField = t.snakify(field); -%>
    SET_<%- transformedField %>_ACTION,%>
<% }); -%>
<% buttons.forEach(function(button){ -%>
<% const transformedButton = t.snakify(button); -%>
    HANDLE_<%- transformedButton %>_BUTTON_ACTION,%>
<% }); -%>
} from '../constants/<%= t.capitalize(featureName) -%>Constants.js';

export const <%= featureName %>Actions = {
<% fields.forEach(function(field){ -%>
<% const transformedField = t.snakify(field); -%>
    [SET_<%- transformedField %>_ACTION%>]: <%- field %> => ({
        type: SET_<%- transformedField %>_ACTION,%>
        payload: {
            <%- field %>,
        },
    }),
<% }); -%>
<% buttons.forEach(function(button){ -%>
<% const transformed = t.snakify(button); -%>
    [HANDLE_<%- transformed %>_BUTTON_ACTION%>]: () => (dispatch, getState) => {
        // place here code for button handling
    },
<% }); -%>
};
